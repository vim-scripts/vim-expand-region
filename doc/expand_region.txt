*vim-expand-region.txt* Incremental visual selection

                                        __                   _
       ___  _  ______  ____ _____  ____/ /  ________  ____ _(_)___  ____
      / _ \| |/_/ __ \/ __ `/ __ \/ __  /  / ___/ _ \/ __ `/ / __ \/ __ \
     /  __/>  </ /_/ / /_/ / / / / /_/ /  / /  /  __/ /_/ / / /_/ / / / /
     \___/_/|_/ .___/\__,_/_/ /_/\__,_/  /_/   \___/\__, /_/\____/_/ /_/
             /_/                                   /____/

                              Reference Manual~


==============================================================================

CONTENTS                                              *expand-region-contents*
    1.Intro...................................|expand-region-intro|
    2.Usage...................................|expand-region-usage|
    3.Mappings................................|expand-region-mappings|
    4.Global Options..........................|expand-region-global-options|
    5.About...................................|expand-region-about|

==============================================================================
1. Intro                                                 *expand-region-intro*

vim-expand-regions brings the incremental visual selection feature from other
text editors into Vim.

Emac's 'expand-region': https://github.com/magnars/expand-region.el
IntellJ's 'syntax aware selection':
http://www.jetbrains.com/idea/documentation/tips/#tips_code_editing
Eclipse's 'select enclosing element':
http://stackoverflow.com/questions/4264047/intellij-ctrlw-equivalent-shortcut-in-eclipse

==============================================================================
2. Usage                                                 *expand-region-usage*
==============================================================================

Press '+' to expand the visual selection and '_' to shrink it.

==============================================================================
2. Mappings                                           *expand-region-mappings*
==============================================================================

Customize the key mappings if you don't like the default. >

    map K <Plug>(expand_region_expand)
    map J <Plug>(expand_region_shrink)

==============================================================================
4. Global Options                               *expand-region-global-options*

                                                *'expand_region_text_objects'*
Default: See below
Dictionary containing the text objects the plugin uses to search for the
available regions to expand/shrink to. The value corresponding to each plugin
indicates whether text object is recursive. A recursive text object is
continually expanded until the region no longer gets larger. >

    let g:expand_region_text_objects = {
          \ 'iw'  :0,
          \ 'iW'  :1,
          \ 'i"'  :0,
          \ 'i''' :0,
          \ 'i]'  :1, " Support nesting of square brackets
          \ 'ib'  :1, " Support nesting of parentheses
          \ 'iB'  :1, " Support nesting of braces
          \ 'il'  :0, " Not included in Vim by default. See https://github.com/kana/vim-textobj-line
          \ 'ip'  :0,
          \ 'ie'  :0  " Not included in Vim by default. See https://github.com/kana/vim-textobj-entire
          \}

Replace it completely or extend the default by putting the following in your
vimrc: >

    call expand_region#custom_text_objects({
          \ "\/\\n\\n\<CR>": 1, " If you're really crazy, you could supply search patterns. They're also text objects.
          \ 'a]'  :1, " Support nesting of 'around' brackets
          \ 'ab'  :1, " Support nesting of 'around' parentheses
          \ 'aB'  :1, " Support nesting of 'around' braces
          \ 'ii'  :0, " 'inside indent'. Not included in Vim by default. See https://github.com/kana/vim-textobj-indent
          \ 'ai'  :0, " 'around indent'. Not included in Vim by default. See https://github.com/kana/vim-textobj-indent
          \})

==============================================================================
6. About                                                 *expand-region-about*

Find the latest version of the plugin here:
    http://github.com/terryma/vim-expand-region

 vim:tw=78:sw=4:ft=help:norl:
